version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: artifact_postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: artifact_builder
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d artifact_builder"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ChromaDB - Vector Database
  chromadb:
    image: chromadb/chroma:latest
    container_name: artifact_chromadb
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - chromadb_data:/chroma/chroma
    environment:
      IS_PERSISTENT: "TRUE"
      ANONYMIZED_TELEMETRY: "FALSE"
      ALLOW_RESET: "TRUE"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 10s
      timeout: 5s
      retries: 5

  # AnythingLLM
  anythingllm:
    image: mintplexlabs/anythingllm:latest
    container_name: artifact_anythingllm
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      STORAGE_DIR: /app/storage
      LLM_PROVIDER: anthropic
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      ANTHROPIC_MODEL_PREF: claude-sonnet-4-20250514
      VECTOR_DB: chroma
      CHROMA_ENDPOINT: http://chromadb:8000
      EMBEDDING_ENGINE: native
      SERVER_PORT: 3001
    volumes:
      - anythingllm_storage:/app/storage
    depends_on:
      chromadb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: artifact_backend
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 4000
      DATABASE_URL: postgresql://admin:${DB_PASSWORD:-changeme}@postgres:5432/artifact_builder
      ANYTHINGLLM_URL: http://anythingllm:3001
      ANYTHINGLLM_API_KEY: ${ANYTHINGLLM_API_KEY}
      CHROMA_URL: http://chromadb:8000
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      CORS_ORIGIN: http://localhost:3000
    volumes:
      - ./backend/src:/app/src
      - backend_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      chromadb:
        condition: service_healthy
      anythingllm:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: ${FRONTEND_API_URL:-http://localhost:4000}
    container_name: artifact_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: ${FRONTEND_API_URL:-http://localhost:4000}
      REACT_APP_WS_URL: ${FRONTEND_WS_URL:-ws://localhost:4000}
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
  chromadb_data:
    driver: local
  anythingllm_storage:
    driver: local
  backend_uploads:
    driver: local

networks:
  default:
    name: artifact_network
